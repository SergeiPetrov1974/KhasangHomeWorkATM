package io.khasang.homework.atm;


public class Main {
    public static void main(String[] args) {
        Atm atm1 = new Atm(500000);
        Menu menu = new Menu(atm1);
        menu.showMenu();
    }
}
/*
Вы программируете упрощенный банкомат, и у вас есть некоторые требования к карточкам, которые будут в нем использоваться.
В частности требования:
1. Чтобы можно было узнать остаток на карте,
2. чтобы можно было списать часть средств с карты для выдачи наличными.
Вы не знаете, какие карточки планируется использовать сразу, и, тем более, не знаете, какие будут подключены в будущем.
Но вам нужно как-то сделать программу банкомата универсальной.
Как вы спроектируете программу?
Напишите упрощенную программу банкомат (ATM) с использованием новых знаний об отличиях обычных классов/абстрактных
классов/интерфейсов в Java.
На заметку:
Имейте ввиду, что у этой задачи нет единственного правильного решения. Архитектура будет зависеть от того,
как вы более детально сформулируете требования к программе.

Подсказка! Нажмите, если не знаете с чего начать...
Создайте класс Main – точку входа
Создайте абстрактный класс Card
Создайте потомков класса Card, например, Visa, MasterCard
Создайте класс Atm
Теперь у вас есть каркас классов – выделенных сущностей из предметной области.

Следующим шагом вам нужно определить, что каждый класс должен хранить в своих переменных (полях класса) и
какие методы нужны каждому классу, чтобы с ним могли взаимодействовать другие классы.

Например:

В классе Atm должно быть поле класса, хранящее текущую карту, вставленную в банкомат
В классе Card методы получитьБаланс() и списатьСредства() – getBalance() / withdraw()
В классах Visa, MasterCard на первом этапе можно ничего не делать, просто унаследовать абстрактный класс
Дополнительная задача:

Реализуйте Кредитную карту, потомка Card

Она будет хранить не только баланс карты – но и размер кредита от Банка (кредитный лимит).
Соответственно при списании может списывать деньги не только с той суммы, которую внес клиент, но и используя кредитный лимит.

И у нее должен быть метод: узнать, сколько должен банку.

А для еще более сложной задачи: хранить дату погашения задолженности (по кредитному лимиту)
 */
